#hjson (go to http://hjson.org for details)
{
  # define the controller that fetches the configuration and produces the content for outputFile
  controller: controller.js
  outputFile: /tmp/test.txt

  # refresh interval in seconds
  refreshInterval: 5

  # logfile to tail to the console (can be "")
  # can be used to redirect logs for Docker
  logFile: ""

  # run on start/restart to configure rsyslog and launch haproxy
  startup:
    '''
    # prepare, configure files or run any required processes

    # here you would launch the main process (e.g. haproxy)
    # for the sample we only show the outputFile
    cat /tmp/test.txt
    '''

  # to reload a new configuration with minimal service impact and without breaking existing sessions
  reload:
    '''
    # here you would tell the main process (e.g. haproxy)
    # to reload it's configuration
    # for the sample we only show the outputFile
    echo ---
    cat /tmp/test.txt
    '''

  # kill haproxy on shutdown
  shutdown:
    '''
    # here you would kill the main process
    '''

  # define the template to generate the outputFile
  /*
  `random` was generated by the code in controller.js
  */
  template:
    '''
    <% [ "World", "Human" ].forEach(name => {
    %>Hello <%=name%>!
    <% }); %>
    In a real world scenario this file would contain the configuration generated by dyconf.

    Today's random value is <%=random%>!
    '''
}
